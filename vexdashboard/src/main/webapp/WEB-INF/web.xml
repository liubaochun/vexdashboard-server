<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
         version="2.4">

    <display-name>Alternate Content Service</display-name>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:context.xml</param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <filter>
        <filter-name>CORS Filter</filter-name>
        <filter-class>org.ebaysf.web.cors.CORSFilter</filter-class>
        <init-param>
            <description>A comma separated list of allowed origins. Note: An '*' cannot be used for an allowed origin when using credentials.</description>
            <param-name>cors.allowed.origins</param-name>
            <param-value>*</param-value>
        </init-param>
        <init-param>
            <description>A comma separated list of HTTP verbs, using which a CORS
                request can be made.</description>
            <param-name>cors.allowed.methods</param-name>
            <param-value>GET,POST,HEAD,OPTIONS,PUT,DELETE</param-value>
        </init-param>
        <init-param>
            <description>A comma separated list of allowed headers when making a non simple CORS request.</description>
            <param-name>cors.allowed.headers</param-name>
            <param-value>Origin,Accept,Authorization,Content-Type,Content-Type,X-Requested-With,Authorization,Origin,Access-Control-Request-Method,Access-Control-Request-Headers</param-value>
        </init-param>
        <init-param>
            <description>A comma separated list non-standard response headers that will be exposed to XHR2 object.</description>
            <param-name>cors.exposed.headers</param-name>
            <param-value></param-value>
        </init-param>
        <init-param>
            <description>A flag that suggests if CORS is supported with cookies</description>
            <param-name>cors.support.credentials</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <description>A flag to control logging</description>
            <param-name>cors.logging.enabled</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <description>Indicates how long (in seconds) the results of a preflight request can be cached in a preflight result cache.</description>
            <param-name>cors.preflight.maxage</param-name>
            <param-value>10</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CORS Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <servlet>
        <servlet-name>cxfServlet</servlet-name>
        <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>cxfServlet</servlet-name>
        <url-pattern>/core/*</url-pattern>
    </servlet-mapping>



    <env-entry>
        <env-entry-name>appName</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>vexdashboard</env-entry-value>
    </env-entry>

</web-app>